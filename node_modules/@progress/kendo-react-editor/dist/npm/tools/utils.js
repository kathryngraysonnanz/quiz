"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parentNode = exports.userSelectNone = exports.popupSettings = exports.borderStyles = exports.units = exports.itemRender = exports.formatString = exports.onDownPreventDefault = void 0;
var React = require("react");
var messages_1 = require("./../messages");
/**
 * @hidden
 */
var onDownPreventDefault = {
    onMouseDown: function (e) { return e.preventDefault(); },
    onPointerDown: function (e) { return e.preventDefault(); }
};
exports.onDownPreventDefault = onDownPreventDefault;
/**
 * @hidden
 */
var userSelectNone = {
    userSelect: 'none'
};
exports.userSelectNone = userSelectNone;
/**
 * @hidden
 */
var formatString = function (input) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    args.forEach(function (value, index) {
        input = input.replace('{' + index + '}', String(value));
    });
    return input;
};
exports.formatString = formatString;
/**
 * @hidden
 */
var itemRender = function (li, itemProps) {
    return itemProps.dataItem.style ? React.cloneElement(li, li.props, (React.createElement("span", { style: itemProps.dataItem.style }, li.props.children))) : li;
};
exports.itemRender = itemRender;
/**
 * @hidden
 */
var units = ['px', 'em', '%'];
exports.units = units;
/**
 * @hidden
 */
var popupSettings = { animate: { openDuration: 150, closeDuration: 150 } };
exports.popupSettings = popupSettings;
/**
 * @hidden
 */
var borderStyles = [
    { textKey: messages_1.keys.borderStyleNone, text: messages_1.messages[messages_1.keys.borderStyleNone], value: 'none' },
    { textKey: messages_1.keys.borderStyleSolid, text: messages_1.messages[messages_1.keys.borderStyleSolid], value: 'solid' },
    { textKey: messages_1.keys.borderStyleDotted, text: messages_1.messages[messages_1.keys.borderStyleDotted], value: 'dotted' },
    { textKey: messages_1.keys.borderStyleDashed, text: messages_1.messages[messages_1.keys.borderStyleDashed], value: 'dashed' },
    { textKey: messages_1.keys.borderStyleDouble, text: messages_1.messages[messages_1.keys.borderStyleDouble], value: 'double' },
    { textKey: messages_1.keys.borderStyleGroove, text: messages_1.messages[messages_1.keys.borderStyleGroove], value: 'groove' },
    { textKey: messages_1.keys.borderStyleRidge, text: messages_1.messages[messages_1.keys.borderStyleRidge], value: 'ridge' },
    { textKey: messages_1.keys.borderStyleInset, text: messages_1.messages[messages_1.keys.borderStyleInset], value: 'inset' },
    { textKey: messages_1.keys.borderStyleOutset, text: messages_1.messages[messages_1.keys.borderStyleOutset], value: 'outset' },
    { textKey: messages_1.keys.borderStyleInitial, text: messages_1.messages[messages_1.keys.borderStyleInitial], value: 'initial' },
    { textKey: messages_1.keys.borderStyleInherit, text: messages_1.messages[messages_1.keys.borderStyleInherit], value: 'inherit' },
    { textKey: messages_1.keys.borderStyleHidden, text: messages_1.messages[messages_1.keys.borderStyleHidden], value: 'hidden' }
];
exports.borderStyles = borderStyles;
/**
 * @hidden
 */
function parentNode(pos, predicate) {
    for (var depth = pos.depth; depth > 0; depth--) {
        var node = pos.node(depth);
        if (predicate(node)) {
            return { node: node, depth: depth };
        }
    }
    return null;
}
exports.parentNode = parentNode;
