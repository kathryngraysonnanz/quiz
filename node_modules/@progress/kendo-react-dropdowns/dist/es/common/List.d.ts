import * as React from 'react';
import { ListItemProps } from './ListItem';
import { ListGroupItemProps } from './ListGroupItem';
import { LocalizationService } from '@progress/kendo-react-intl';
/**
 * @hidden
 */
export interface ListProps {
    id?: string;
    virtual?: boolean;
    show?: boolean;
    data: any[];
    value?: any;
    textField?: string;
    valueField?: string;
    groupField?: string;
    groupMode?: string;
    isMultiColumn?: boolean;
    optionsGuid?: string;
    listRef?: React.Ref<HTMLUListElement>;
    wrapperRef?: React.Ref<HTMLDivElement>;
    wrapperCssClass?: string;
    wrapperStyle?: React.CSSProperties;
    listStyle?: React.CSSProperties;
    listClassName?: string;
    skip?: number;
    focusedIndex?: number;
    highlightSelected?: boolean;
    onClick: (index: number, event: React.MouseEvent<HTMLLIElement>) => void;
    itemRender?: (li: React.ReactElement<HTMLLIElement>, itemProps: ListItemProps) => React.ReactNode;
    groupHeaderItemRender?: (li: React.ReactElement<HTMLLIElement>, groupItemProps: ListGroupItemProps) => React.ReactNode;
    noDataRender?: (element: React.ReactElement<HTMLDivElement>) => React.ReactNode;
    onMouseDown?: (event: React.MouseEvent<HTMLDivElement>) => void;
    onBlur?: (event: React.FocusEvent<HTMLDivElement>) => void;
    onScroll?: (event: React.UIEvent<HTMLDivElement>) => void;
    scroller?: any;
}
/**
 * @hidden
 */
export default class List extends React.Component<ListProps> {
    renderItems(): (false | JSX.Element)[][];
    renderNoValueElement(localizationService: LocalizationService): string | number | boolean | React.ReactFragment | JSX.Element | null | undefined;
    render(): string | number | boolean | React.ReactFragment | JSX.Element | null | undefined;
}
